<div id="gradient-bkg" class="fixed top-0 h-full w-full -z-10"></div>

<script>
  import * as THREE from "three";

  const $bkg = document.getElementById("gradient-bkg");
  const w = window.innerWidth;
  const h = window.innerHeight;
  //
  const scene = new THREE.Scene();
  //
  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 10;
  scene.add(camera);
  //
  const renderer = new THREE.WebGLRenderer();

  renderer.setSize(w, h);

  renderer.setClearColor(0x00000, 1);
  //
  $bkg?.appendChild(renderer.domElement);

  const light = new THREE.DirectionalLight(0xffffff, 0.5);

  light.position.set(-1, 3, 1);
  scene.add(light);

  const bkgParticles: THREE.Mesh[] = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = "";

  loader.load("/bkg.webp", (texture) => {
    const bkgGeometry = new THREE.PlaneGeometry(300, 300);

    const bkgMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    const NUM_OF_PARTICLES = 300;

    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      const particle = new THREE.Mesh(bkgGeometry, bkgMaterial);

      particle.position.set(
        Math.random() * 300 - 250,//x
        Math.random() * 500 - 250,//y
        Math.random() * 1000 - 100//z
      );
      particle.rotation.z = Math.random() * 360;
      scene.add(particle);
      bkgParticles.push(particle);
    }
  });

  function animate() {
    requestAnimationFrame(animate);

    bkgParticles.forEach((particle) => {
      particle.rotation.z += 0.008;
    });

    renderer.render(scene, camera);
  }
  animate();
</script>
